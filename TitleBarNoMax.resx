<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>